---
import { changeLanguage } from "i18next";
import BaseLayout from "../../../layouts/BaseLayout.astro";
import CodeSnippet from "@/components/mdx/CodeSnippet.astro";
import LeftArrowIcon from "@/components/atoms/LeftArrowIcon.astro";
import Tag from "@/components/atoms/Tag.astro";
import Share from "@/components/widgets/Share.astro";
import { createSlug } from "@/utils/createSlug";
import { formatDate } from "@/utils/formatDate";
import { getPosts } from "@/utils/posts";
import { techColors } from "@/utils/TechColors";

changeLanguage("eng");

type Tag = {
    tag: string;
    tagColor: string | undefined;
};
export async function getStaticPaths() {
    const posts = await getPosts();
    return posts.map((post) => ({
        params: { slug: createSlug(post.data.title) },
        props: post,
    }));
}
const post = Astro.props;
const { title, description, tags, publishDate } = post.data;
const formattedTags = tags.map((tag, i) => {
    let tagsFormatted: Tag = {
        tag: "",
        tagColor: undefined,
    };
    Object.values(techColors).forEach((key) => {
        if (key.description?.toLowerCase() === tag.toLowerCase()) {
            tagsFormatted = {
                tag: tag,
                tagColor: key.description,
            };
        }
    });
    return tagsFormatted;
});
const { Content } = await post.render();
---

<BaseLayout
  title={title}
  author="Elias Pereyra"
  description={description}
  articleDate={publishDate}
>
  <article class="article">
    <LeftArrowIcon href="/blog" color="#eee" />
    <div class="content-wrapper">
      <header class="header">
        <h1 class="header-title">{title}</h1>
        <small>{formatDate(publishDate)}</small>
        <ul id="tag-items">
          {
            formattedTags.map(({ tag, tagColor }) => (
              <Tag tag={tag} tagColor={tagColor} />
            ))
          }
        </ul>
      </header>

      <section class="content">
        <Content components={{ pre: CodeSnippet }} />
      </section>
    </div>

    <footer class="footer-article">
      <h4 class="footer-title">Share this with your friends</h4>
      <Share />
    </footer>
  </article>
</BaseLayout>

<style>
  .article {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1em;
    padding: 8em 10em;
    background: linear-gradient(380deg, #010613 -20%, #232243 400%);

    :is(h2, h3, h4, p, code, small) {
      color: var(--white-c-700);
    }

    .content-wrapper {
      .header {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 1rem;
        margin-bottom: 1rem;

        .tag-items {
          display: flex;
          gap: 0.5em;
          color: var(--white-c-700);

          li {
            padding: 2px 9px;
            border: 1px solid var(--white-c-600);
            border-radius: 7px;

            small {
              transition: opacity 0.32s ease-in-out;

              &:hover {
                opacity: 0.7;
              }
            }
          }
        }
      }

      .content {
        max-width: 70em;
        padding: 2em 10em;
        display: flex;
        flex-direction: column;
        gap: 2rem;

        img {
          border-radius: 0.7em;
          object-fit: contain;
        }

        hr {
          border: 1px solid var(--white-c-600);
          border-radius: 110px;
        }

        p {
          max-width: 70ch;
          line-height: 2rem;
          color: var(--white-c-700);
        }

        strong {
          color: var(--white-c-800);
        }

        a {
          text-decoration: underline;
          color: var(--white-c-600);
        }

        code {
          line-height: 1.7rem;
          font-family: "CommitMono";
        }

        li {
          padding: 1rem;
          list-style: disc;
          list-style-position: inside;
          color: var(--white-c-600);
        }
      }
    }

    .footer-article {
      margin-top: 1rem;
      padding: 1em;
      border-radius: 0.77rem;

      .footer-title {
        background-image: linear-gradient(
          to right,
          var(--blue-color),
          var(--secondary-color)
        );
        background-size: 0% 2px;
        background-position: 0 100%;
        background-repeat: no-repeat;
      }
    }
  }

  @media (prefers-color-scheme: light) {
    .article {
      background: var(--hero__light-bg);

      :is(h2, code, small) {
        color: var(--black-c-800);
      }
      .header {
        .header-title {
          color: var(--black-c-800);
        }
        .tag-items {
          li {
            border: 1px solid var(--black-c-800);
          }
        }
      }
      .content-wrapper {
        :is(h1, h4, p, li, a) {
          color: var(--black-c-800);
        }

        code {
          color: var(--white-c-700);
        }
      }
    }

    .footer-article {
      .footer-title {
        color: var(--black-c-800);
      }
    }
  }
</style>
